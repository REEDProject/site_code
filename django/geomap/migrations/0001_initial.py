# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-08-07 05:51
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PatronsPlaceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'P&P Place Type',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='For editors only; not displayed on REED Online site', max_length=50)),
                ('coordinates', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=3857)),
                ('is_approximate', models.BooleanField(default=False, help_text='Whether the provided coordinates are approximate or not')),
                ('placeholder_coordinates', django.contrib.gis.db.models.fields.GeometryField(blank=True, help_text="If specified, the point here will be used as the co-ordinates for all\nunlocated places for which this place is the container; otherwise,\nthis place's co-ordinates (as specified in the field/map of that name)\nwill be used.", null=True, srid=3857)),
                ('patrons_place_code', models.IntegerField(choices=[(1, 'Town, known event'), (2, 'Residence, known event'), (3, 'Monastery, known event'), (4, 'Town, reference or major town'), (5, 'Residence, reference'), (6, 'Monastery, reference'), (7, 'Town, known local event'), (8, 'Residence, known local event'), (9, 'Monastery, known local event'), (10, 'Town, local reference to place'), (11, 'Residence, local reference to place'), (12, 'Monastery, local reference to place')], null=True, verbose_name='P&P PCODE')),
                ('patrons_label_flag', models.IntegerField(choices=[(0, 'Local sites not expected to be labelled'), (1, 'Major town or place to be labelled at all zoom levels'), (2, 'Minor town or place to be labelled at intermediate zoom levels'), (3, 'Named performance venues to be labelled when zoomed in to largest scales')], null=True, verbose_name='P&P label flag')),
                ('container', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contained_places', to='geomap.Place')),
                ('patrons_place_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='geomap.PatronsPlaceType')),
            ],
        ),
    ]
