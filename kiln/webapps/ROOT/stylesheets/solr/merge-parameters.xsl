<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="2.0"
                xmlns:kiln="http://www.kcl.ac.uk/artshums/depts/ddh/kiln/ns/1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <!-- This XSLT adds the Solr query parameters passed in the
       query-string parameter to an XML query document (root element
       "query"). The document is only added to, with the new elements
       added after the existing ones.

       This XSLT entirely replaces the Kiln version with the same
       name, since it must handle range queries based on two different
       fields. -->

  <xsl:import href="../../kiln/stylesheets/solr/merge-parameters.xsl" />

  <xsl:template match="query">
    <xsl:copy>
      <xsl:apply-templates select="@*|node()" />
      <xsl:for-each select="tokenize($query-string, '&amp;')">
        <!-- Through madness or autogenerated query strings, there may
             be empty or malformed components (such as the query
             string starting with an &amp; -->
        <xsl:if test="contains(., '=')">
          <xsl:call-template name="handle-querystring-parameter">
            <xsl:with-param name="key" select="substring-before(., '=')" />
            <xsl:with-param name="value" select="substring-after(., '=')" />
          </xsl:call-template>
        </xsl:if>
      </xsl:for-each>
    </xsl:copy>
  </xsl:template>

  <xsl:template match="@*|node()">
    <xsl:copy>
      <xsl:apply-templates select="@*|node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template name="handle-querystring-parameter">
    <xsl:param name="key" />
    <xsl:param name="value" />
    <xsl:choose>
      <xsl:when test="$key = 'date_from'">
        <xsl:variable name="real_value">
          <xsl:choose>
            <xsl:when test="$value">
              <xsl:value-of select="$value" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>1</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <record_date type="range_start">
          <xsl:call-template name="kiln:escape-value">
            <xsl:with-param name="value" select="$real_value" />
            <xsl:with-param name="url-escaped" select="1" />
          </xsl:call-template>
        </record_date>
      </xsl:when>
      <xsl:when test="$key = 'date_to'">
        <xsl:variable name="real_value">
          <xsl:choose>
            <xsl:when test="$value">
              <xsl:value-of select="$value" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>2000</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <record_date type="range_end">
          <xsl:call-template name="kiln:escape-value">
            <xsl:with-param name="value" select="$real_value" />
            <xsl:with-param name="url-escaped" select="1" />
          </xsl:call-template>
        </record_date>
      </xsl:when>
      <xsl:otherwise>
        <xsl:element name="{$key}">
          <xsl:call-template name="kiln:escape-value">
            <xsl:with-param name="value" select="$value" />
            <xsl:with-param name="url-escaped" select="1" />
          </xsl:call-template>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

</xsl:stylesheet>
