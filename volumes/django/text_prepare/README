        ABOUT

This Django app is responsible for operating on eREED Word documents
containing records marked up with @-codes. It provides the following
two functions (corresponding to two views in views.py):

* Validate the content of the Word document, providing feedback on the
  position of any errors. Validity is defined as conformance to the
  @-code grammar that is specified in document_parser.py.

* Convert the Word document to TEI XML. Automatically validates the
  input, and provides the same output in the case of errors as the
  validation function.

The generated records TEI XML includes xml:id attributes that are
guaranteed to be unique within the document, and make use of a
supplied prefix so that (if the same prefix is not used more than
once) they are unique across the whole corpus.

The generated bibl TEI XML contains the document descriptions that
must be manually merged into
kiln/webapps/ROOT/content/xml/tei/taxonomy.xml.

All Word files for a single collection should be processed together in
one operation.


        INSTALLATION

This app makes use of headless LibreOffice to convert a Word .doc
document to use the docx XML format, and the Python packages lxml,
python_docx, and pyparsing.


        TESTS

This app comes with tests of the conversion process, going from text
to text.
